[{"D:\\Documents\\prueba\\frontend-applicants\\git-search\\src\\App.js":"1","D:\\Documents\\prueba\\frontend-applicants\\git-search\\src\\index.js":"2"},{"size":2702,"mtime":1606329861592,"results":"3","hashOfConfig":"4"},{"size":262,"mtime":1606326308351,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"76f8e0",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\prueba\\frontend-applicants\\git-search\\src\\App.js",["11","12","13"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Card, Image, Icon, Button } from \"semantic-ui-react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [repos, setRepos] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [userInput, setUserInput] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/example\")\n      .then((res) => res.json())\n      .then((data) => {\n        setData(data);\n      });\n  }, []);\n\n  const setData = ({ name, login, public_repos, avatar_url, id, html_url }) => {\n    setName(name);\n    setUserName(login);\n    setRepos(public_repos);\n    setAvatar(avatar_url);\n    setId(id);\n    setUrl(html_url);\n  };\n\n  const handleSearch = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    fetch(`https://api.github.com/users/${userInput}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.message) {\n          setError(data.message);\n        } else {\n          setData(data);\n          setError(null);\n        }\n      });\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"search\">\n        <div>\n          <h1>Git Search</h1>\n        </div>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Input\n              placeholder=\"Search user\"\n              name=\"user\"\n              minLength=\"4\"\n              onChange={handleSearch}\n            />\n            <Form.Button content=\"Search\" />\n          </Form.Group>\n        </Form>\n      </div>\n      <div className=\"card-container\">\n        {error ? (\n          <h1>{error}</h1>\n        ) : (\n          <Card>\n            <Image src={avatar} wrapped ui={false} />\n            <Card.Content>\n              <Card.Header>Name: {name}</Card.Header>\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name=\"user\" />\n                Username: {username}\n              </a>\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name=\"address card\" />\n                Id {id}\n              </a>\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name=\"folder\" />\n                {repos} Repositories\n              </a>\n            </Card.Content>\n            <Button href={url} target=\"_blank\" rel=\"noreferrer\">\n              Go\n            </Button>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Documents\\prueba\\frontend-applicants\\git-search\\src\\index.js",[],{"ruleId":"14","severity":1,"message":"15","line":77,"column":15,"nodeType":"16","endLine":77,"endColumn":18},{"ruleId":"14","severity":1,"message":"15","line":83,"column":15,"nodeType":"16","endLine":83,"endColumn":18},{"ruleId":"14","severity":1,"message":"15","line":89,"column":15,"nodeType":"16","endLine":89,"endColumn":18},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]